#!/usr/bin/env sh

[ -z $2 ] && num="5" || num="$2"

PLAYERD="$HOME/.cache/.playersel"
SINKD="$HOME/.cache/.sinksel"
CURD="$HOME/.cache/.cursong"

if [ ! -f "$PLAYERD" ]; then
    [ $(playerctl -l | wc -l) -gt 0 ] && \
        (playerctl -l | tr '\n' ',' | awk -F',' '{print $1}' > $PLAYERD) ||\
        (echo "No Players Available." && exit 1;)
fi

CURPLAY=$(cat $PLAYERD)

[ ! -f "$SINKD" ] && echo "0" > $SINKD
DEFSINID=$(cat $SINKD)


selplayer(){
    CURPLAY=$(playerctl -l | dmenu -p "Select Player:" -c -l 10)
    [ ! -z $CURPLAY ] && echo "$CURPLAY" > $PLAYERD
}

# selsink is used for selecting which audio device is effected by,
# for example, hitting XF86AudioRaiseVolume, whereas the separate
# `sinswap` script takes an actively playing audio stream (i.e. spotify)
# and changes which audio device it's playing on.
# Eventually I'm probably gonna end up merging `sinswap`'s features
# into this file and make the whole process a bit more intuitive
selsink(){
    SRCS=$(pactl list sinks | grep -e "Sink #" -e "Description:" |\
        sed 's/\(Sink #\|Description: \)//g' | paste -sd ' \n')
    if [ $(echo "$SRCS" | wc -l) -gt 1 ]; then
        SEL=$(echo "$SRCS" | colrm 1 2 | sed 's/^[[:blank:]]*//g' |\
            awk -F'(' '{print $1}' | dmenu -p "Select Default Audio Sink: " -c -l 10)
        [ ! -z "$SEL" ] && notify-send "Default Audio Sink Set To:" "$SEL"
    fi
    SINKID=$(echo "$SRCS" | grep "$SEL" | awk '{print $1}')
    [ -z $SINKID ] && echo "0" > $SINKD || echo "$SINKID" > $SINKD
    DEFSINID="$SINKID"
    pactl set-default-sink $(namefromid)
}

# this function is for potentially adding default sink selection
# in the future, which requires the sink name instead of ID.
namefromid(){
    SINKNAME=$(pactl list sinks | grep -e "Sink #" -e "Name:" |\
        sed 's/\(Sink #\|Name: \)//g' | paste -sd ' \n' |\
        grep "^$DEFSINID" | awk '{print $2}')
    echo "$SINKNAME"
}

metadata(){
    CUR="$(playerctl metadata --format '{{ artist }} - {{ title }}' 2>&1 | grep -vi "no player")"
    [ -z "$CUR" ] && cat $CURD || echo "$CUR" | tee $CURD
}

alias pctl="playerctl -p $(head -n 1 $PLAYERD)"

case $1 in
    sel) selplayer ;;
    src) selsink ;;
    name) namefromid ;;
    u*) pactl set-sink-volume $DEFSINID "+${num}%" ;;
    d*) pactl set-sink-volume $DEFSINID "-${num}%" ;;
    m|mute) pactl set-sink-mute $DEFSINID toggle ;;
    truemute) pactl set-sink-mute $DEFSINID true ;;
    next)  pctl next ;;
    prev)  pctl previous ;;
    play)  pctl play ;;
    pause) playerctl --all-players pause ;;
    playpause) pctl play-pause ;;
    restart) pctl next; pctl previous ;;
    now) metadata ;;# playerctl metadata --format "{{ artist }} - {{ title }}" 2>&1 | grep -vi 'no player';;
    *) cat << EOF
actl: cli for PulseAudio + playerctl
Options:
    up NUM      Increase volume
    down NUM    Decrease volume
    mute        MUTE = !MUTE
    truemute    MUTE = TRUE
    next        Next track
    prev        Previous track
    play        PAUSED = FALSE
    pause       PAUSED = TRUE
    playpause   PAUSED = ! PAUSED
    restart     Restart current song
    now         Prints current song details to STDOUT as [Artist] - [Title]
    help        Print this message
EOF
esac
